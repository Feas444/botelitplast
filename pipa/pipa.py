# pipa.py

import logging
import sys
import os
import asyncio

try:
    import nest_asyncio
    nest_asyncio.apply()
except ImportError:
    pass

from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    CallbackQueryHandler
)

# –ò–º–ø–æ—Ä—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫
from config import BOT_TOKEN, setup_directories, DEVELOPER_USERNAME
from db import get_developer_id, get_role

# –ò–º–ø–æ—Ä—Ç ConversationHandler‚Äô–æ–≤
from handlers.registration import registration_conv   # /start (—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è)
from handlers.mail.mail_other import mail_conv        # –ü–æ—á—Ç–∞
from handlers.search import search_conv               # –ü–æ–∏—Å–∫
from handlers.admin import admin_conv                 # –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å (—Ç–µ–ø–µ—Ä—å —Å —Ñ–∞–π–ª–æ–≤—ã–º –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º –≤ –æ–¥–Ω–æ–º —Ñ–∞–π–ª–µ)

# –ò–º–ø–æ—Ä—Ç ¬´–æ–±—ã—á–Ω–æ–≥–æ¬ª —Ñ–∞–π–ª–æ–≤–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ (–¥–ª—è –ø—Ä–æ—Å—Ç—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
from handlers.files import (
    directory_handler,
    file_handler,
    files_back_handler,
    handle_files_obshaya,
    handle_files_role
)

# –ì–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –º–µ–Ω—é
from handlers.menus import global_menu_handler


async def help_command(update, context):
    user_id = update.effective_user.id
    role = get_role(user_id) or ""
    dev_name = (update.effective_user.username or "").lower()
    if role.lower() in ("–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä", "–ø–æ–º–æ—â–Ω–∏–∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∞") or dev_name == DEVELOPER_USERNAME.lower():
        text = (
            "–°–ø—Ä–∞–≤–∫–∞ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:\n\n"
            "‚Ä¢ /start ‚Äî –∑–∞–ø—É—Å–∫/–ø–µ—Ä–µ–∑–∞–ø—É—Å–∫.\n"
            "‚Ä¢ /help ‚Äî —ç—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞.\n"
            "‚Ä¢ –ö–Ω–æ–ø–∫–∏ –º–µ–Ω—é: –û–±—â–∏–µ —Ñ–∞–π–ª—ã, –§–∞–π–ª—ã —Ä–∞–±–æ—Ç—ã, –°–æ–æ–±—â–µ–Ω–∏—è, –ü–æ–∏—Å–∫, –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å.\n"
            "‚Ä¢ –í ¬´–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å¬ª –º–æ–∂–Ω–æ –∑–∞–π—Ç–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏, —Ä–∞—Å—Å—ã–ª–∫–∏, —Ñ–∞–π–ª–æ–≤–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏ —Ç. –¥."
        )
    else:
        text = (
            "–°–ø—Ä–∞–≤–∫–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:\n\n"
            "‚Ä¢ /start ‚Äî —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è.\n"
            "‚Ä¢ /help ‚Äî —ç—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞.\n"
            "‚Ä¢ –ö–Ω–æ–ø–∫–∏ –º–µ–Ω—é: –û–±—â–∏–µ —Ñ–∞–π–ª—ã, –§–∞–π–ª—ã —Ä–∞–±–æ—Ç—ã, –°–æ–æ–±—â–µ–Ω–∏—è, –ü–æ–∏—Å–∫ —Ñ–∞–π–ª–æ–≤."
        )
    await update.message.reply_text(text)


async def notify_developer_startup(app):
    dev_id = get_developer_id("zxcegorka4")
    if dev_id:
        try:
            await app.bot.send_message(chat_id=dev_id, text="–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω! üöÄ")
        except Exception as e:
            logging.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–≤–µ–¥–æ–º–∏—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞: {e}")


async def error_handler(update, context):
    import traceback
    err_text = ''.join(traceback.format_exception(None, context.error, context.error.__traceback__))
    logging.error("–û—à–∏–±–∫–∞: %s", err_text)
    dev_id = get_developer_id("zxcegorka4")
    if dev_id:
        try:
            await context.bot.send_message(chat_id=dev_id, text=f"–û—à–∏–±–∫–∞:\n{err_text}")
        except Exception as e:
            logging.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—à–∏–±–∫—É —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É: {e}")


async def main():
    logging.basicConfig(
        format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
        level=logging.DEBUG
    )

    setup_directories()
    app = ApplicationBuilder().token(BOT_TOKEN).build()

    # 1) ConversationHandler‚Äô—ã –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º 0
    app.add_handler(registration_conv, 0)
    app.add_handler(mail_conv, 0)
    app.add_handler(search_conv, 0)
    app.add_handler(admin_conv, 0)  # <-- —Ç—É—Ç —Ç–µ–ø–µ—Ä—å –í–ï–°–¨ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ –∏ —Ñ–∞–π–ª–æ–≤

    # 2) ¬´–û–±—ã—á–Ω—ã–π¬ª —Ñ–∞–π–ª–æ–≤—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä (–¥–ª—è —Ä—è–¥–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π)
    # –ï—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ ‚Äî –ø—É—Å—Ç—å —Ç–æ–∂–µ –±—É–¥–µ—Ç –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç 0
    app.add_handler(CallbackQueryHandler(directory_handler, pattern="^dir\\|"), 0)
    app.add_handler(CallbackQueryHandler(file_handler, pattern="^file\\|"), 0)
    app.add_handler(CallbackQueryHandler(files_back_handler, pattern="^files_back$"), 0)
    app.add_handler(CallbackQueryHandler(handle_files_obshaya, pattern="^files_obshaya$"), 0)
    app.add_handler(CallbackQueryHandler(handle_files_role, pattern="^files_role$"), 0)

    # 3) –ì–ª–æ–±–∞–ª—å–Ω—ã–π CallbackQueryHandler ‚Äì –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç 1
    app.add_handler(CallbackQueryHandler(global_menu_handler), 1)

    # 4) /help
    app.add_handler(CommandHandler("help", help_command))

    # 5) –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
    app.add_error_handler(error_handler)

    # –£–≤–µ–¥–æ–º–ª—è–µ–º —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞
    await notify_developer_startup(app)

    logging.info("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
    await app.run_polling()
    logging.info("–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")


if __name__ == "__main__":
    try:
        asyncio.run(main())
    except RuntimeError as e:
        if "already running" in str(e):
            import nest_asyncio
            nest_asyncio.apply()
            asyncio.get_event_loop().run_until_complete(main())
        else:
            raise
